"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.requireTailwindConfig = exports.resolveTailwindConfigPath = void 0;
const path_1 = __importDefault(require("path"));
const fs_1 = __importDefault(require("fs"));
/**
 * returns resolved/absolute path of tailwind.config.js
 * @param configPath relative path to tailwind.config.js
 */
function resolveTailwindConfigPath(configPath) {
    try {
        const resolvedConfigPath = path_1.default.resolve(configPath);
        fs_1.default.accessSync(resolvedConfigPath);
        return resolvedConfigPath;
    }
    catch (err) {
        throw new Error(`Tailwind config file not found '${configPath}' | ${err}`);
    }
}
exports.resolveTailwindConfigPath = resolveTailwindConfigPath;
/**
 * returns required tailwind.config.js
 * if no configPath parameter it will return default tailwind.config.js
 * @param configPath optional relative path to tailwind.config.js
 */
function requireTailwindConfig(configPath) {
    try {
        const config = configPath
            ? require(configPath)
            : require("tailwindcss/defaultConfig");
        return config;
    }
    catch (err) {
        throw new Error(`Tailwind config file not found '${configPath}' | ${err}`);
    }
}
exports.requireTailwindConfig = requireTailwindConfig;
//# sourceMappingURL=tailwindcssConfig.js.map