export interface TailwindConfig {
    separator?: string;
    [key: string]: any;
}
export interface ResolvedTailwindConfig extends Required<TailwindConfig> {
}
export declare function resolveConfig(config: TailwindConfig): ResolvedTailwindConfig;
declare function core(resolvedConfig: ResolvedTailwindConfig): {
    baseRoot: import("postcss").Root;
    utilitiesRoot: import("postcss").Root;
    componentsRoot: import("postcss").Root;
    processedPlugins: any;
    resolvedConfig: ResolvedTailwindConfig;
    screens: string[];
    variants: string[];
    getSubstituteScreenAtRules: any;
    getSubstituteVariantsAtRules: any;
    generateTwClassSubstituteRoot: (twClassDictionary: import("./utilities").TwClassDictionary, twParsedClass: import("@xwind/class-utilities").TwParsedClass) => import("./utilities").TwRoot;
};
export default core;
export * from "./utilities";
//# sourceMappingURL=core.d.ts.map